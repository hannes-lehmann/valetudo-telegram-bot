name: Build and release
concurrency: 
  cancel-in-progress: true
  group: build-and-release
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        build: [
          { os: linux, arch: amd64, suffix: '' },
          { os: linux, arch: arm64, suffix: '' },
          { os: darwin, arch: arm64, suffix: '' },
          { os: windows, arch: amd64, suffix: '.exe' }
        ]
    
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build
      run: env GOOS=${{ matrix.build.os }} GOARCH=${{ matrix.build.arch }} go build -o valetudo-telegram-bot${{ matrix.build.suffix }} ./cmd/valetudo-telegram-bot/main.go
    
    - name: Create release .zip archive
      run: zip valetudo-telegram-bot-${{ matrix.build.os }}-${{ matrix.build.arch }}.zip valetudo-telegram-bot${{ matrix.build.suffix }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: valetudo-telegram-bot-${{ matrix.build.os }}-${{ matrix.build.arch }}
        path: valetudo-telegram-bot-${{ matrix.build.os }}-${{ matrix.build.arch }}.*

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-22.04
    permissions: write-all
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: builds
          pattern: valetudo-telegram-bot-*
          merge-multiple: true

      - name: Create random tag
        uses: actions/github-script@v7
        id: tag
        with:
          result-encoding: string
          script: |
            const tag = 'v' + (
              new Date().toISOString().slice(0, 16)
                .replace(/[-:]/g, '')
                .replace('T', '.')
            )
            
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/' + tag,
              sha: context.sha
            })
            
            return tag

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.result }}
          files: builds/*